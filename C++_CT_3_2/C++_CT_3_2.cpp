// C++_CT_3_2.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <bits/stdc++.h>
using namespace std;
//배열크기 N, 더하는 총 회수 M, 한번에 연속해서 더할수 있는 회수 K

int n, m, k;
vector<int> v;

int main()
{
    //공백기준 n,m,k 입력
    cin >> n >> m >> k;

    //n 개의 수를 공백기준으로 입력받아 v에 저장
    for (int i = 0; i < n; i++)
    {
        int x;
        cin >> x;
        v.push_back(x);
    }
    //벡터의 시작 위치를 가리키는 v.begin()과 벡터의 끝 위치를 가리키는 v.end()를 인자로 받아, 
    //이 범위 내의 원소들을 오름차순으로 정렬
    sort(v.begin(),v.end());

    //가장 큰수
    int first = v[n - 1];
    //두 번째 큰수
    int second = v[n - 2];

    //가장 큰 반복되는 수열 크기= k+1*******

    //가장 큰 수가 등장하는 회수
    int cnt = (m / (k + 1)) * k;
    //나누어떨어지지않고 남은 더할 수 있는 숫자중 가장큰 수가 등장하는 수 추가
    cnt += m % (k + 1);

    int result = 0;
    result += cnt * first;
    result += (m - cnt) * second;
    
    cout << result;
}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
